# -*- coding: utf-8 -*-
# ******************************************************************
# ILP - Implantation d'un langage de programmation.
# Copyright (C) 2004 <Christian.Queinnec@lip6.fr>
# $Id: grammar3.rnc 477 2006-09-29 13:23:48Z queinnec $
# GPL version>=2
# ******************************************************************

# Troisième version du langage étudié: ILP3 pour « Incomplet Langage
# Poétique » Il sera complété dans les cours qui suivent.

# On ajoute une instruction try-catch-finally. Les exceptions sont
# signalées par une primitive nommée throw ce qui permet de ne rien
# ajouter de plus à cette grammaire.

include "grammar2.rnc"
start |= programme3
instruction |= try

# Un programme3 est semblable à un programme2:

programme3 = element programme3 {
   definitionFonction *,
   instructions
}

# Cette définition permet une clause catch ou une clause finally ou
# encore ces deux clauses à la fois.

try = element try {
   element corps { instructions },
   (  catch
    | finally
    | ( catch, finally )
   )
}

# FUTUR: restreindre les noms comme pour les variables!

catch = element catch {
   attribute exception { xsd:Name - ( xsd:Name { pattern = "(ilp|ILP)" } ) },
   instructions
}

finally = element finally {
   instructions
}

# fin de grammar3.rnc
